%!PS-Adobe-3.0 EPSF-3.0
%%Title: psu.ps
%%Creator: XCircuit v3.7 rev26
%%CreationDate: Mon Mar 30 20:52:04 2015
%%Pages: 1
%%BoundingBox: 68 68 835 460
%%DocumentNeededResources: font Helvetica Helvetica-Bold Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/euro::L {
begingate
1 1.000 12 -36 24 12 90.000 270.000 ellipse
1 1.000 12 -12 24 12 90.000 270.000 ellipse
1 1.000 12 12 24 12 90.000 270.000 ellipse
1 1.000 12 36 24 12 90.000 270.000 ellipse
1 1.000 12 48 12 88 2 polygon
1 1.000 12 -48 12 -88 2 polygon
endgate
} def

/euro::D {
begingate
1 1.000 -24 16 24 16 2 polygon
241 1.000 -16 -16 16 -16 0 16 -16 -16 4 polygon
1 1.000 0 48 0 16 2 polygon
241 1.000 0 -16 0 -48 2 polygon
endgate
} def

/euro::ELCO {
begingate
1 1.000 0 -48 0 -24 2 polygon
241 1.000 -24 -24 24 -24 24 -16 -24 -16 -24 -24 5 polygon
1 1.000 -24 0 24 0 24 16 -24 16 -24 0 5 polygon
1 1.000 0 16 0 32 2 polygon
(+) {/Helvetica cf} 2 0 0 1.000 -32 16 label
endgate
} def

/generic::jumper {
% trivial
begingate
1 1.000 0 0 10 -90.000 90.000 xcarc
1 1.000 0 10 0 16 2 polygon
1 1.000 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0 1.000 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0 1.000 0 -16 pinlabel
endgate
} def

/euro::R {
begingate
1 1.000 0 80 0 40 2 polygon
1 1.000 -16 40 16 40 16 -40 -16 -40 -16 40 5 polygon
1 1.000 0 -40 0 -80 2 polygon
endgate
} def

/tubeamp::dot {
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
endgate
} def

/euro::brug {
begingate
1.000 45 -40 40 euro::D
1.000 315 40 40 euro::D
1.000 315 -40 -40 euro::D
1.000 45 40 -40 euro::D
1 1.000 -72 8 -80 0 -72 -8 3 polygon
1 1.000 -8 -72 0 -80 8 -72 3 polygon
1 1.000 72 -8 80 0 72 8 3 polygon
1 1.000 -8 72 0 80 2 polygon
1 1.000 0 80 8 72 2 polygon
1 1.000 0 104 0 80 2 polygon
1 1.000 80 0 104 0 2 polygon
1 1.000 0 -80 0 -104 2 polygon
1 1.000 -80 0 -104 0 2 polygon
endgate
} def

/analog::gnd {
% trivial
begingate
1 1.000 0 0 0 -32 2 polygon
1 1.000 -32 -32 32 -32 2 polygon
1 1.000 -18 -46 18 -46 2 polygon
1 1.000 -4 -60 4 -60 2 polygon
0.933 0.604 0.000 scb
(GND) {/Times-Roman cf} 2 1 0 1.000 0 0 pinglobal
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/analog::pnp {
begingate
1 1.000 -48 0 -64 0 2 polygon
1 1.000 -48 48 -48 -48 2 polygon
1 1.000 0 48 -48 22 2 polygon
1 1.000 0 48 0 64 2 polygon
1 1.000 0 -48 -48 -22 2 polygon
1 1.000 0 -48 0 -64 2 polygon
1.000 240 -48 22 generic::arrowhead
1.000 0.000 0.000 scb
(C) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
(B) {/Times-Roman cf} 2 7 0 1.000 -64 0 pinlabel
(E) {/Times-Roman cf} 2 9 0 1.000 0 64 pinlabel
0.180 0.545 0.341 scb
(spice:Q%i %pC %pB %pE pnp) {/Times-Roman cf} 2 4 0 1.000 -244 -139 infolabel
endgate
} def

/analog::diode {
begingate
248 1.000 -18 -16 0 16 18 -16 3 polygon
1 1.000 0 -48 0 -16 2 polygon
1 1.000 0 48 0 16 2 polygon
1 1.000 -18 16 18 16 2 polygon
1.000 0.000 0.000 scb
(d.m) {/Times-Roman cf} 2 9 0 1.000 0 48 pinlabel
(d.p) {/Times-Roman cf} 2 13 0 1.000 0 -48 pinlabel
endgate
} def

/analog::nmos {
begingate
1 1.000 0 -64 0 -28 -32 -28 -32 28 0 28 0 64 6 polygon
1 1.000 -44 -28 -44 28 2 polygon
1 1.000 -44 0 -64 0 2 polygon
1.000 0.000 0.000 scb
(G) {/Times-Roman cf} 2 7 0 1.000 -64 0 pinlabel
(S) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
(D) {/Times-Roman cf} 2 9 0 1.000 0 64 pinlabel
0.180 0.545 0.341 scb
(spice:M%i %pD %pG %pS GND nmos) {/Times-Roman cf} 2 4 0 1.000 -244 -139 
infolabel
(sim:n %pG %pS %pD) {/Times-Roman cf} 2 4 0 1.000 -244 -187 infolabel
endgate
} def

/analog::pmos2 {
begingate
1.000 0 0 0 analog::nmos
1.000 270 -32 28 generic::arrowhead
1.000 0.000 0.000 scb
(G) {/Times-Roman cf} 2 7 0 1.000 -64 0 pinlabel
(S) {/Times-Roman cf} 2 9 0 1.000 0 64 pinlabel
(D) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
endgate
} def

/generic::arrow {
% nonetwork
begingate
1 0.800 0 -40 0 20 2 polygon
1.000 0 0 40 generic::arrowhead
endgate
} def

/generic::circle {
% trivial
begingate
1 1.000 16 0 6 0.000 360.000 xcarc
1 1.000 0 0 10 0 2 polygon
1.000 0.000 0.000 scb
(out) {/Times-Roman cf} 2 4 0 1.000 16 0 pinlabel
(out) {/Times-Roman cf} 2 7 0 1.000 0 0 pinlabel
endgate
} def

/tubeamp::fuse {
begingate
1.000 90 0 48 generic::circle
1 1.000 0 16 16 90.000 270.000 xcarc
1 1.000 2 -16 16 -90.000 90.000 xcarc
-1.000 90 0 -48 generic::circle
endgate
} def


%%EndSetup

%%Page: power_supply 1
%%PageOrientation: Portrait
/pgsave save def bop
1.0000 inchscale
2.6000 setlinewidth 1152 337 translate

1.000 0 -460 151 euro::L
1.000 0 -460 583 euro::L
1.000 0 -460 359 euro::L
1.000 0 -460 -57 euro::L
1.000 180 -532 264 euro::L
1 1.000 -496 672 -496 -112 2 polygon
1 1.000 -480 672 -480 -112 2 polygon
1 1.000 -448 32 -368 32 2 polygon
1 1.000 -448 -144 -368 -144 2 polygon
1 1.000 -448 64 -368 64 2 polygon
1 1.000 -448 240 -368 240 2 polygon
1.000 0 -320 368 euro::D
1.000 90 -272 448 euro::D
1.000 0 -160 368 euro::ELCO
1.000 0 -160 208 euro::ELCO
1 1.000 -448 272 -160 272 2 polygon
1 1.000 -160 240 -160 320 2 polygon
1 1.000 -448 448 -320 448 2 polygon
1 1.000 -320 416 -320 448 2 polygon
1 1.000 -320 320 -320 288 2 polygon
1.000 0 -320 272 generic::jumper
1 1.000 -160 160 -160 128 2 polygon
1.000 90 64 128 euro::R
1.000 0 -64 288 euro::ELCO
1 1.000 -160 400 -160 448 2 polygon
1 1.000 -64 320 -64 448 2 polygon
1 1.000 -64 240 -64 128 2 polygon
1 1.000 -320 128 -320 256 2 polygon
1 1.000 -320 128 -16 128 2 polygon
1.000 0 192 288 euro::D
1 1.000 232 287 216 303 2 polygon
1 1.000 168 305 152 321 2 polygon
1 1.000 192 240 192 128 2 polygon
1 1.000 192 336 192 448 2 polygon
1 1.000 192 448 -224 448 2 polygon
1.000 0 -64 448 tubeamp::dot
1.000 0 -160 448 tubeamp::dot
1.000 0 -160 272 tubeamp::dot
1.000 0 -160 128 tubeamp::dot
1.000 0 -64 128 tubeamp::dot
1.000 0 -320 448 tubeamp::dot
1 1.000 144 128 256 128 2 polygon
0.000 0.000 1.000 scb
(-20V) {/Helvetica-Bold cf} 2 16 0 1.000 304 112 label
sce
1 1.000 256 128 288 128 288 144 288 96 4 polygon
1.000 0 192 128 tubeamp::dot
(12V) {/Helvetica-Bold 0.600 cf} 2 16 0 1.000 -432 400 label
(100mA) {/Helvetica-Bold 0.600 cf} 2 16 0 1.000 -432 368 label
(100u) {/Helvetica 0.600 cf} 2 16 0 1.000 -240 384 label
(35V) {/Helvetica 0.600 cf} 2 16 0 1.000 -240 352 label
(35V) {/Helvetica 0.600 cf} 2 16 0 1.000 -240 192 label
(100u) {/Helvetica 0.600 cf} 2 16 0 1.000 -240 224 label
(35V) {/Helvetica 0.600 cf} 2 16 0 1.000 -32 256 label
(1000u) {/Helvetica 0.600 cf} 2 16 0 1.000 -32 288 label
(47) {/Helvetica 0.600 cf} 2 16 0 1.000 48 80 label
(20V) {/Helvetica 0.600 cf} 2 16 0 1.000 240 288 label
(5W) {/Helvetica 0.600 cf} 2 16 0 1.000 240 256 label
(6.3V) {/Helvetica-Bold 0.600 cf} 2 16 0 1.000 -432 192 label
(5A) {/Helvetica-Bold 0.600 cf} 2 16 0 1.000 -432 160 label
(2.5A) {/Helvetica-Bold 0.600 cf} 2 16 0 1.000 -432 -48 label
(6.3V) {/Helvetica-Bold 0.600 cf} 2 16 0 1.000 -432 -16 label
1.000 90 -256 608 euro::brug
1 1.000 -448 496 -256 496 -256 512 3 polygon
1.000 90 -352 608 analog::gnd
1 1.000 -448 672 -448 720 -256 720 -256 704 4 polygon
1 1.000 -160 608 -128 608 -128 784 3 polygon
1.000 0 -48 688 euro::ELCO
1 1.000 -48 720 -48 784 2 polygon
1.000 360 -48 560 analog::gnd
1 1.000 -48 560 -48 640 2 polygon
(500V) {/Helvetica 0.600 cf} 2 16 0 1.000 -16 656 label
(47u) {/Helvetica 0.600 cf} 2 16 0 1.000 -16 688 label
1.000 90 80 784 euro::R
1.000 0 208 688 euro::ELCO
1 1.000 208 720 208 784 2 polygon
1.000 360 208 560 analog::gnd
1 1.000 208 560 208 640 2 polygon
(500V) {/Helvetica 0.600 cf} 2 16 0 1.000 240 656 label
(200u) {/Helvetica 0.600 cf} 2 16 0 1.000 240 688 label
1 1.000 16 784 -128 784 2 polygon
(270) {/Helvetica 0.600 cf} 2 16 0 1.000 64 736 label
(50W) {/Helvetica 0.600 cf} 2 16 0 1.000 64 704 label
1 1.000 144 784 256 784 2 polygon
1 1.000 256 784 288 784 288 800 288 752 4 polygon
0.000 0.000 1.000 scb
(+300V) {/Helvetica-Bold cf} 2 16 0 1.000 304 768 label
sce
(300V) {/Helvetica-Bold 0.600 cf} 2 16 0 1.000 -432 688 label
(300mA) {/Helvetica-Bold 0.600 cf} 2 16 0 1.000 -432 656 label
1 1.000 -48 784 -48 848 624 848 3 polygon
1.000 0 -48 784 generic::dot
1.000 0 208 784 generic::dot
1.000 0 544 640 analog::pnp
1.000 180 544 768 euro::R
1.000 180 448 752 analog::diode
1.000 180 448 384 euro::R
1 1.000 448 800 448 848 2 polygon
1 1.000 480 640 448 640 2 polygon
1.000 180 544 464 euro::R
1.000 180 544 272 euro::R
1.000 360 544 160 analog::gnd
1 1.000 544 144 544 192 2 polygon
1 1.000 544 352 544 400 2 polygon
1 1.000 544 528 544 576 2 polygon
(220k) {/Helvetica 0.600 cf} 2 16 0 1.000 368 384 label
(1/2W) {/Helvetica 0.600 cf} 2 16 0 1.000 368 352 label
1.000 90 656 560 euro::R
1.000 0 784 480 euro::ELCO
1.000 360 784 432 analog::gnd
-1.000 90 784 848 analog::pmos2
1 1.000 720 848 624 848 2 polygon
1.000 180 784 704 euro::R
1 1.000 784 512 784 624 2 polygon
1 1.000 784 560 736 560 2 polygon
1 1.000 576 560 544 560 2 polygon
1.000 0 784 560 generic::dot
1.000 0 544 560 generic::dot
1.000 0 448 640 generic::dot
1.000 0 544 848 generic::dot
1.000 0 448 848 generic::dot
(100k) {/Helvetica 0.600 cf} 2 16 0 1.000 640 592 label
(91k) {/Helvetica 0.600 cf} 2 16 0 1.000 576 464 label
(180k) {/Helvetica 0.600 cf} 2 16 0 1.000 576 272 label
(1/2W) {/Helvetica 0.600 cf} 2 16 0 1.000 576 240 label
(15u) {/Helvetica 0.600 cf} 2 16 0 1.000 816 480 label
(450V) {/Helvetica 0.600 cf} 2 16 0 1.000 816 448 label
1 1.000 896 848 928 848 928 864 928 816 4 polygon
0.000 0.000 1.000 scb
(+300V) {/Helvetica-Bold cf} 2 16 0 1.000 944 832 label
(Reg) {/Helvetica-Bold cf} 2 16 0 1.000 960 784 label
sce
(IRF820) {/Helvetica 0.600 cf} 2 16 0 1.000 752 864 label
-1.000 180 720 384 analog::pmos2
1 1.000 656 384 544 384 2 polygon
1 1.000 720 848 720 576 2 polygon
1.000 0 720 560 generic::jumper
1 1.000 720 544 720 448 2 polygon
1 1.000 720 320 720 288 928 288 928 304 928 256 5 polygon
0.000 0.000 1.000 scb
(+200V) {/Helvetica-Bold cf} 2 16 0 1.000 944 288 label
(Reg) {/Helvetica-Bold cf} 2 16 0 1.000 960 240 label
sce
(10k) {/Helvetica 0.600 cf} 2 16 0 1.000 816 704 label
1.000 0 720 848 generic::dot
1.000 0 544 384 generic::dot
0.000 0.000 1.000 scb
(Reg) {/Helvetica-Bold cf} 2 16 0 1.000 320 64 label
sce
1.000 225 384 720 generic::arrow
1.000 225 400 704 generic::arrow
(green) {/Helvetica 0.600 cf} 2 16 0 1.000 384 672 label
1 1.000 448 720 448 464 2 polygon
1 1.000 448 320 448 160 544 160 3 polygon
1.000 0 544 160 generic::dot
(IRF820) {/Helvetica 0.600 cf} 2 16 0 1.000 640 320 label
(MJE350) {/Helvetica 0.600 cf} 2 16 0 1.000 544 640 label
(1k) {/Helvetica 0.600 cf} 2 16 0 1.000 576 752 label
(2W) {/Helvetica 0.600 cf} 2 16 0 1.000 48 48 label
1 1.000 -544 352 -544 400 -640 400 3 polygon
1 1.000 -544 176 -544 128 -640 128 3 polygon
1.000 0 -672 272 analog::diode
1.000 180 -624 272 analog::diode
1 1.000 -640 256 -656 288 2 polygon
1 1.000 -624 320 -672 320 -640 320 -640 400 4 polygon
1 1.000 -624 224 -656 224 -672 224 3 polygon
1 1.000 -656 224 -656 128 -640 128 3 polygon
1.000 90 -816 400 tubeamp::fuse
1 1.000 -768 400 -640 400 2 polygon
1 1.000 -864 400 -912 400 -912 272 -960 272 4 polygon
1.000 90 -800 128 euro::R
1 1.000 -720 128 -656 128 2 polygon
1 1.000 -880 128 -912 128 -912 240 -960 240 4 polygon
1 1.000 -841 113 -762 144 2 polygon
(CTN33) {/Helvetica 0.600 cf} 2 16 0 1.000 -848 80 label
(250V) {/Helvetica 0.600 cf} 2 16 0 1.000 -752 272 label
(230V) {/Helvetica 0.600 cf} 2 16 0 1.000 -848 432 label
(630mA) {/Helvetica 0.600 cf} 2 16 0 1.000 -848 352 label
1 1.000 912 848 848 848 2 polygon
1.000 180 896 688 euro::D
1 1.000 854 690 871 672 2 polygon
1 1.000 919 672 936 656 2 polygon
(9.1V) {/Helvetica 0.600 cf} 2 16 0 1.000 944 704 label
(5W) {/Helvetica 0.600 cf} 2 16 0 1.000 944 672 label
1 1.000 896 736 896 848 2 polygon
1 1.000 896 640 896 560 784 560 3 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
